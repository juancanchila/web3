<?php

/**
 * @file
 * Install, update and uninstall functions for the node_layout_builder module.
 */

/**
 * Loads data template to be stored in database.
 */
module_load_include('inc', 'node_layout_builder', 'node_layout_builder.data.templates');

/**
 * Implements hook_install().
 *
 * Show a message to the settings page.
 */
function node_layout_builder_install() {
  // Save the template data.
  $templates = data_templates();
  foreach ($templates as $template) {
    $entity = \Drupal::entityTypeManager()
      ->getStorage('node_layout_builder_template')
      ->create([
        'title' => $template['title'],
        'preview' => $template['preview'],
        'data' => $template['data'],
      ]);
    $entity->save();
  }

  // Display a message.
  \Drupal::messenger()->addMessage(t('To use Node Layout Builder you need to enabled it in content type.'), 'status', TRUE);
}

/**
 * Implements hook_requirements().
 *
 * {@inheritdoc}
 */
function node_layout_builder_requirements($phase) {
  $requirements = [];

  // Leaflet.
  $path_leaflet = 'libraries/leaflet/leaflet.js';
  if (\Drupal::moduleHandler()->moduleExists('libraries')) {
    $path_leaflet = libraries_get_path('leaflet') . '/leaflet.js';
  }
  $path_leaflet = DRUPAL_ROOT . '/' . $path_leaflet;
  if (!file_exists($path_leaflet)) {
    $requirements['leaflet'] = [
      'title' => t('leaflet library is missing'),
      'value' => t('Plugin not detected'),
      'severity' => REQUIREMENT_ERROR,
      'description' => t('leaflet requires the leaflet.js library.
       Download the leaflet from <a href="https://leafletjs.com/download.html" target="_blank">https://leafletjs.com/download.html</a> at least
       version 1.3.4, and place it in the libraries folder
       (/libraries/leaflet)'),
    ];
  }
  else {
    $requirements['leaflet'] = [
      'title' => t('Leaflet'),
      'value' => t('Plugin detected'),
      'severity' => REQUIREMENT_OK,
    ];
  }

  // toastr.
  $path_toastr = 'libraries/toastr/toastr.min.js';
  if (\Drupal::moduleHandler()->moduleExists('libraries')) {
    $path_toastr = libraries_get_path('toastr') . '/toastr.min.js';
  }
  $path_toastr = DRUPAL_ROOT . '/' . $path_toastr;
  if (!file_exists($path_toastr)) {
    $requirements['toastr'] = [
      'title' => t('Toastr library is missing'),
      'value' => t('Plugin not detected'),
      'severity' => REQUIREMENT_ERROR,
      'description' => t('Toastr requires the toastr.min.js library.
       Download the toastr <a href="https://github.com/CodeSeven/toastr" target="_blank">https://github.com/CodeSeven/toastr</a> at least
       version 1.2.2, and place it in the libraries folder
       (/libraries/toastr)'),
    ];
  }
  else {
    $requirements['toastr'] = [
      'title' => t('Toastr'),
      'value' => t('Plugin detected'),
      'severity' => REQUIREMENT_OK,
    ];
  }

  return $requirements;
}
